# RUN: llc -start-before greedy %s -o - | FileCheck %s
--- |
  ; ModuleID = 'movi8remat_test.ll'
  source_filename = "movi8remat_test.ll"
  target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
  target triple = "thumbv6m-apple--eabi"
  
  declare void @consume_value(i32)
  
  declare i32 @get_value(...)
  
  declare void @consume_five_values(i32, i32, i32, i32, i32)
  
  define void @this_spills_the_immediate_constant() {
    tail call void @consume_value(i32 42)
    %1 = tail call i32 (...) @get_value()
    %2 = tail call i32 (...) @get_value()
    %3 = tail call i32 (...) @get_value()
    %4 = tail call i32 (...) @get_value()
    %5 = tail call i32 (...) @get_value()
    tail call void @consume_value(i32 42)
    tail call void @consume_five_values(i32 %1, i32 %2, i32 %3, i32 %4, i32 %5)
    ret void
  }
  
  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) #0
  
  attributes #0 = { nounwind }

...
---
name:            this_spills_the_immediate_constant
alignment:       1
tracksRegLiveness: true
registers:       
  - { id: 0, class: tgpr }
  - { id: 1, class: tgpr }
  - { id: 2, class: tgpr }
  - { id: 3, class: tgpr }
  - { id: 4, class: tgpr }
  - { id: 5, class: tgpr }
  - { id: 6, class: tgpr }
frameInfo:       
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  maxCallFrameSize: 4
body:             |
  bb.0 (%ir-block.0):
    ADJCALLSTACKDOWN 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %0, dead %cpsr = tMOVi8 42, 14, _
    %r0 = COPY %0
    tBL 14, _, @consume_value, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit killed %r0, implicit-def %sp
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    ADJCALLSTACKDOWN 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    tBL 14, _, @get_value, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit-def %sp, implicit-def %r0
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %1 = COPY killed %r0
    ADJCALLSTACKDOWN 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    tBL 14, _, @get_value, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit-def %sp, implicit-def %r0
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %2 = COPY killed %r0
    ADJCALLSTACKDOWN 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    tBL 14, _, @get_value, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit-def %sp, implicit-def %r0
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %3 = COPY killed %r0
    ADJCALLSTACKDOWN 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    tBL 14, _, @get_value, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit-def %sp, implicit-def %r0
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %4 = COPY killed %r0
    ADJCALLSTACKDOWN 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    tBL 14, _, @get_value, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit-def %sp, implicit-def %r0
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %5 = COPY killed %r0
    ADJCALLSTACKDOWN 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    %r0 = COPY %0
    tBL 14, _, @consume_value, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit killed %r0, implicit-def %sp
    ADJCALLSTACKUP 0, 0, 14, _, implicit-def dead %sp, implicit %sp
    ADJCALLSTACKDOWN 4, 0, 14, _, implicit-def dead %sp, implicit %sp
    %6 = COPY %sp
    tSTRi %5, %6, 0, 14, _ :: (store 4 into stack)
    %r0 = COPY %1
    %r1 = COPY %2
    %r2 = COPY %3
    %r3 = COPY %4
    tBL 14, _, @consume_five_values, csr_aapcs, implicit-def dead %lr, implicit %sp, implicit killed %r0, implicit killed %r1, implicit killed %r2, implicit killed %r3, implicit-def %sp
    ADJCALLSTACKUP 4, 0, 14, _, implicit-def dead %sp, implicit %sp
    tBX_RET 14, _

...

# CHECK: movs r0, #42
# CHECK: movs r0, #42
