; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mattr=+avx  | FileCheck %s --check-prefix=CHECK

define <2 x double> @sqrtd2(double* nocapture readonly %v) local_unnamed_addr #0 {
; CHECK-LABEL: sqrtd2:
; CHECK:       # BB#0: # %entry
; CHECK-NEXT:    vsqrtpd (%rdi), %xmm0
; CHECK-NEXT:    retq
entry:
  %0 = bitcast double* %v to <2 x double>*
  %1 = load <2 x double>, <2 x double>* %0, align 8
  %2 = call <2 x double> @llvm.sqrt.v2f64(<2 x double> %1)
  ret <2 x double> %2
}

define <4 x float> @sqrtf4(float* nocapture readonly %v) local_unnamed_addr #0 {
; CHECK-LABEL: sqrtf4:
; CHECK:       # BB#0: # %entry
; CHECK-NEXT:    vsqrtps (%rdi), %xmm0
; CHECK-NEXT:    retq
entry:
  %0 = bitcast float* %v to <4 x float>*
  %1 = load <4 x float>, <4 x float>* %0, align 4
  %2 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %1)
  ret <4 x float> %2
}

declare <2 x double> @llvm.sqrt.v2f64(<2 x double>) #1
declare <4 x float> @llvm.sqrt.v4f32(<4 x float>) #1

attributes #0 = { nounwind readonly uwtable  "target-features"="+avx2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

